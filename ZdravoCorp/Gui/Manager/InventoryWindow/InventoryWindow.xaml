<Window x:Class="ZdravoCorp.Gui.Manager.InventoryWindow.InventoryWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZdravoCorp.Gui.Manager.InventoryWindow"
        mc:Ignorable="d"
        Title="InventoryWindow" Height="500" Width="1000" Closing="InventoryWindow_Closing">
    <Grid>
        <TabControl>
            <TabItem x:Name="Inventory" Header="Inventory" >
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="79*"/>
                        <ColumnDefinition Width="915*"/>
                    </Grid.ColumnDefinitions>

                    <RadioButton x:Name="outOfStock" Content="Out of stock" HorizontalAlignment="Left" Margin="15,36,0,0" VerticalAlignment="Top" GroupName="Quantity" IsThreeState="True" Checked="outOfStock_Checked" Grid.ColumnSpan="2"/>
                    <RadioButton x:Name="mediumStock" Content="0-10" HorizontalAlignment="Left" Margin="35,36,0,0" VerticalAlignment="Top" GroupName="Quantity" Checked="mediumStock_Checked" Grid.Column="1"/>
                    <RadioButton x:Name="largeStock" Content="10+" HorizontalAlignment="Left" Margin="92,36,0,0" VerticalAlignment="Top" GroupName="Quantity" Checked="largeStock_Checked" Grid.Column="1"/>
                    <Label Content="Quantity:" HorizontalAlignment="Left" Margin="10,3,0,0" VerticalAlignment="Top" Width="197" Grid.ColumnSpan="2"/>
                    <Label Content="Room type:" HorizontalAlignment="Left" Margin="10,56,0,0" VerticalAlignment="Top" Width="69" Grid.ColumnSpan="2"/>
                    <ComboBox x:Name="roomTypes" HorizontalAlignment="Left" Height="26" Margin="29,56,0,0" VerticalAlignment="Top" Width="194" SelectionChanged="roomTypes_SelectionChanged" Grid.Column="1"/>
                    <Label Content="Equipment type:" HorizontalAlignment="Left" Margin="289,56,0,0" VerticalAlignment="Top" Width="108" RenderTransformOrigin="0.477,2.198" Grid.Column="1"/>
                    <ComboBox x:Name="equipmentTypes" HorizontalAlignment="Left" Height="26" Margin="405,56,0,0" VerticalAlignment="Top" Width="194" BorderBrush="White" Background="Black" SelectionChanged="equipmentTypes_SelectionChanged" Grid.Column="1"/>
                    <CheckBox x:Name="outsideStorage" Content="Outside Storage" HorizontalAlignment="Left" Margin="289,36,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.32,-0.204" Checked="outsideStorage_Checked" Unchecked="outsideStorage_Unchecked" Grid.Column="1"/>
                    <Label Content="Search by atributes:" HorizontalAlignment="Left" Margin="289,3,0,0" VerticalAlignment="Top" Width="126" RenderTransformOrigin="0.477,2.198" Grid.Column="1"/>
                    <TextBox x:Name="atribute" HorizontalAlignment="Left" Height="24" Margin="405,4,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="292" TextChanged="atribute_TextChanged" Grid.Column="1"/>
                    <RadioButton x:Name="noneSelected" Content="Non specified" HorizontalAlignment="Left" Margin="140,36,0,0" VerticalAlignment="Top" GroupName="Quantity" Checked="noneSelected_Checked" Grid.Column="1"/>

                    <DataGrid x:Name="itemTable" Margin="0,0,0,20" Height="283" VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="974" AutoGenerateColumns="False" Loaded="itemTable_Loaded" Grid.ColumnSpan="2" ColumnWidth="139">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}"/>
                            <DataGridTextColumn Header="EquipmentId" Binding="{Binding EquipmentId}"/>
                            <DataGridTextColumn Header="EquipmentName" Binding="{Binding EquipmentName}"/>
                            <DataGridTextColumn Header="EquipmentType" Binding="{Binding EquipmentType}"/>
                            <DataGridTextColumn Header="EquipmentDinamic" Binding="{Binding EquipmentDinamic}"/>
                            <DataGridTextColumn Header="RoomId" Binding="{Binding RoomId}"/>
                            <DataGridTextColumn Header="RoomType" Binding="{Binding RoomType}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>

            </TabItem>

            <TabItem x:Name="DynamicItemList" Header="Dynamic Equipment Re-Stock">
                <Grid Background="#FFE5E5E5">
                    <DataGrid x:Name="dynamicEquipmentTable" SelectionMode="Single" AutoGenerateColumns="False" Loaded="dynamicEquipmentTable_Loaded" Margin="0,40,0,0" Width="900" Height="300" HorizontalAlignment="Center" VerticalAlignment="Top" ColumnWidth="125" >

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}"/>
                            <DataGridTextColumn Header="EquipmentId" Binding="{Binding EquipmentId}"/>
                            <DataGridTextColumn Header="EquipmentName" Binding="{Binding EquipmentName}"/>
                            <DataGridTextColumn Header="EquipmentType" Binding="{Binding EquipmentType}"/>
                            <DataGridTextColumn Header="EquipmentDinamic" Binding="{Binding EquipmentDinamic}"/>
                            <DataGridTextColumn Header="RoomId" Binding="{Binding RoomId}"/>
                            <DataGridTextColumn Header="RoomType" Binding="{Binding RoomType}"/>
                        </DataGrid.Columns>

                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Background" Value="White"/>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Quantity}" Value="0">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Quantity}" Value="{x:Null}">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                    <Trigger Property="DataGridCell.IsSelected" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Background" Value="White"/>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                    <Label Content="Dynamic Equipment Low on Stock" HorizontalAlignment="Center" Height="25" Margin="0,10,0,0" VerticalAlignment="Top" Width="206" FontWeight="Bold"/>
                    <Button x:Name="orderDynamicEquipment" Content="Order" HorizontalAlignment="Right" Height="40" Margin="0,386,47,0" VerticalAlignment="Top" Width="142" Click="orderDynamicEquipment_Click"/>
                    <TextBox x:Name="orderQuantity" HorizontalAlignment="Left" Height="20" Margin="47,406,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="218"/>
                    <Label Content="Ordered quantity:" HorizontalAlignment="Left" Margin="47,375,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.019,0.146" Width="218"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="AllItemAllocation" Header="Allocate Items">
                <Grid Background="#FFE5E5E5">
                    <DataGrid x:Name="itemAllocationTable" SelectionMode="Single" AutoGenerateColumns="False"  Margin="0,40,0,0" Width="900" Height="300" HorizontalAlignment="Center" VerticalAlignment="Top" ColumnWidth="125" Loaded="itemAllocationTable_Loaded" >

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}"/>
                            <DataGridTextColumn Header="EquipmentId" Binding="{Binding EquipmentId}"/>
                            <DataGridTextColumn Header="EquipmentName" Binding="{Binding EquipmentName}"/>
                            <DataGridTextColumn Header="EquipmentType" Binding="{Binding EquipmentType}"/>
                            <DataGridTextColumn Header="EquipmentDinamic" Binding="{Binding EquipmentDinamic}"/>
                            <DataGridTextColumn Header="RoomId" Binding="{Binding RoomId}"/>
                            <DataGridTextColumn Header="RoomType" Binding="{Binding RoomType}"/>
                        </DataGrid.Columns>

                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Background" Value="White"/>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Quantity}" Value="0">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Quantity}" Value="{x:Null}">
                                        <Setter Property="Background" Value="LightCoral"/>
                                    </DataTrigger>
                                    <Trigger Property="DataGridCell.IsSelected" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Background" Value="White"/>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                    <Label Content="All items" HorizontalAlignment="Center" Height="25" Margin="0,10,0,0" VerticalAlignment="Top" Width="59" FontWeight="Bold"/>
                    <Button x:Name="allocate" Content="Allocate Item Stock" HorizontalAlignment="Center" Height="45" Margin="0,372,0,0" VerticalAlignment="Top" Width="230" Click="allocate_Click"/>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
